{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s1900550\\\\Desktop\\\\todos\\\\backend\\\\frontend\\\\src\\\\components\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get('http://localhost:5000').then(res => {\n      if (this._isMounted) {\n        this.setState({\n          todos: res.data\n        });\n      }\n    }).catch(error => console.log(\"Error fetch API \".concat(error)));\n  }\n\n  componentDidUpdate() {\n    axios.get('http://localhost:5000').then(res => {\n      if (this._isMounted) {\n        this.setState({\n          todos: res.data\n        });\n      }\n    }).catch(error => console.log(\"Error fetch API \".concat(error)));\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let todos = this.state.todos;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Welcome to Todo List Component\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, todos.map(todo => React.createElement(\"div\", {\n      className: \"card border-dark m-3 px-0 col-lg-4\",\n      style: {\n        maxWidth: \"18rem\"\n      },\n      key: todo._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Todo\"), React.createElement(\"div\", {\n      className: \"card-body text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: todo.isCompleted ? 'completed' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Title: \", todo.discription), React.createElement(\"p\", {\n      className: todo.isCompleted ? 'completed' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Info: \", todo.responsible), React.createElement(\"p\", {\n      className: \"card-text , completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Priority: \", todo.priority)), React.createElement(Link, {\n      to: \"/edit/\" + todo._id,\n      className: \"btn btn-outline-info my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Link, {\n      to: \"/delete/\" + todo._id,\n      className: \"btn btn-outline-danger \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/s1900550/Desktop/todos/backend/frontend/src/components/TodoList.js"],"names":["React","Component","axios","Link","TodoList","state","todos","_isMounted","componentDidMount","get","then","res","setState","data","catch","error","console","log","componentDidUpdate","componentWillUnmount","render","map","todo","maxWidth","_id","isCompleted","discription","responsible","priority"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass TodoList extends Component {\r\n    state = {\r\n        todos: []\r\n    }\r\n\r\n    _isMounted = false;\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        axios.get('http://localhost:5000')\r\n            .then(res => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        todos: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error fetch API ${error}`))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        axios.get('http://localhost:5000')\r\n            .then(res => {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        todos: res.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => console.log(`Error fetch API ${error}`))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    render() {\r\n        let { todos } = this.state\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                <p>Welcome to Todo List Component</p>\r\n                <div className=\"row\">\r\n                    {todos.map(todo => (\r\n                        <div className=\"card border-dark m-3 px-0 col-lg-4\" style={{ maxWidth: \"18rem\" }} key={todo._id} >\r\n                            <div className=\"card-header\">Todo</div>\r\n                            <div className=\"card-body text-dark\">\r\n                                {/* {todo.isCompleted ? 'completed' : '' + \"card-title\"} */}\r\n                                <h5 className={todo.isCompleted ? 'completed' : ''}>Title: {todo.discription}</h5>\r\n                                <p className={todo.isCompleted ? 'completed' : ''}>Info: {todo.responsible}</p>\r\n                                <p className=\"card-text , completed\" >Priority: {todo.priority}</p>\r\n                                {/* <p className=\"card-text\">isCompleted: {todo.isCompleted}</p> */}\r\n\r\n                            </div>\r\n\r\n                            <Link to={\"/edit/\" + todo._id} className=\"btn btn-outline-info my-1\">Edit</Link>\r\n                            <Link to={\"/delete/\" + todo._id} className=\"btn btn-outline-danger \">Delete</Link>\r\n\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}